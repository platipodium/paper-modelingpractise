Automatically generated by Mendeley Desktop 1.19.8
Any changes to this file will be lost if it is regenerated by Mendeley.

BibTeX export options can be customized via Preferences -> BibTeX in Mendeley Desktop

@misc{Pirogov2024,
author = {Pirogov, A.},
booktitle = {GitHub},
title = {fair-python-cookiecutter},
url = {https://github.com/Materials-Data-Science-and-Informatics/fair-python-cookiecutter},
year = {2024}
}
@article{Weber2000,
author = {Weber, Steven},
file = {:Users/Lemmen/Downloads/qt3hq916dc.pdf:pdf},
journal = {BRIE Working Paper},
keywords = {Physics},
title = {{The Political Economy of Open Source Software}},
volume = {140},
year = {2000}
}
@article{Araujo2019a,
abstract = {Biodiversity assessments use a variety of data and models. We propose best-practice standards for studies in these assessments.},
author = {Ara{\'{u}}jo, Miguel B. and Anderson, Robert P. and {M{\'{a}}rcia Barbosa}, A. and Beale, Colin M. and Dormann, Carsten F. and Early, Regan and Garcia, Raquel A. and Guisan, Antoine and Maiorano, Luigi and Naimi, Babak and O'Hara, Robert B. and Zimmermann, Niklaus E. and Rahbek, Carsten},
doi = {10.1126/sciadv.aat4858},
issn = {2375-2548},
journal = {Science Advances},
month = {jan},
number = {1},
title = {{Standards for distribution models in biodiversity assessments}},
url = {https://www.science.org/doi/10.1126/sciadv.aat4858},
volume = {5},
year = {2019}
}
@misc{OpenSSF2024,
author = {{Open Source Security Foundation}},
title = {{OpenSSF Best Practices Badge Programm}},
url = {https://www.bestpractices.dev},
urldate = {2024-04-30},
year = {2024}
}
@misc{Comses2024fair,
author = {{Network for Computational Modeling in the Social and Ecological Sciences}},
booktitle = {ToBeFair.org},
title = {{Making Models FAIR}},
url = {https://tobefair.org},
urldate = {2024-04-15},
year = {2024}
}
@misc{OSI2024,
author = {{Open Source Initiative}},
title = {{The Open Source Definition}},
url = {https://opensource.org/osd},
urldate = {2024-05-13},
year = {2024}
}
@article{Jones2020a,
abstract = {Best practice for environmental modelling generally aims to increase the accuracy, utility and rigour of models when used as decision-support tools. Despite the wide-spread documentation of best practice, models are frequently and easily challenged during environmental decision-making processes, at least partly because of poor implementation of best practice guidance. We postulate that there is a two-sided gap of understanding between those tasked with making environmental decisions informed by model simulations (i.e., the end users), and modellers charged with generating and interpreting model outputs for environmental decision-making processes. This gap, or disconnect, can mean that best practice is not always implemented in modelling projects. Here we describe a strategic framework that aims to facilitate the implementation of appropriate best practice guidelines to improve the defensibility of the modelling and provide a structured approach to improving communication between modellers and end users. The framework incorporates four phases: 1) initial scoping and investigation, 2) planning, 3) model implementation and evaluation, and 4) model application. At the end of each phase is a hold point that asks a critical question, such as whether modelling is the appropriate tool, or whether the model is adequate for the intended purpose. There is an emphasis on communication between end users and modellers in each phase, and feedback loops to allow for commentary from end users or peer reviewers to be addressed. The framework can be applied to any environmental domain but is sufficiently prescriptive to ensure that best practice guidance for specific domains and model applications can be identified and implemented.},
author = {Jones, Hannah F.E. and {\"{O}}zkundakci, Deniz and Hunt, Stephen and Giles, Hilke and Jenkins, Bevan},
doi = {10.1016/j.envsci.2020.09.030},
file = {:Users/Lemmen/Downloads/1-s2.0-S1462901120313496-main.pdf:pdf},
issn = {14629011},
journal = {Environmental Science {\&} Policy},
keywords = {Environmental decision-making,Environmental management,Model predictions,Peer review,Transparency,Uncertainty analysis},
month = {dec},
number = {October},
pages = {533--541},
title = {{Bridging the gap: A strategic framework for implementing best practice guidelines in environmental modelling}},
url = {https://linkinghub.elsevier.com/retrieve/pii/S1462901120313496},
volume = {114},
year = {2020}
}
@techreport{Eurostat2023,
author = {Eurostat},
doi = {10.2908/fish_ld_main},
title = {{Landings of fishery products - main data}},
year = {2023}
}
@article{Stewart2022,
author = {Stewart, Kate},
doi = {10.1093/oso/9780198862345.003.0007},
file = {:Users/Lemmen/Downloads/SPDX{\_}and{\_}Software{\_}Bill{\_}of{\_}Materials{\_}ISOIEC{\_}5962L{\_}2.pdf:pdf},
isbn = {9780198862345},
journal = {Open Source Law, Policy and Practice},
number = {June},
pages = {145--C7.N49},
title = {{SPDX and Software Bill of Materials ISO/IEC 5962L 2021}},
year = {2022}
}
@article{Shahin2017,
author = {Shahin, Mojtaba and {Ali Babar}, Muhammad and Zhu, Liming},
doi = {10.1109/ACCESS.2017.2685629},
issn = {2169-3536},
journal = {IEEE Access},
pages = {3909--3943},
title = {{Continuous Integration, Delivery and Deployment: A Systematic Review on Approaches, Tools, Challenges and Practices}},
url = {http://ieeexplore.ieee.org/document/7884954/},
volume = {5},
year = {2017}
}
@phdthesis{Liew2017,
author = {Liew, Austin Jun-Yian},
school = {Massachusetts Institute of Technology},
title = {{Overcoming code rot in legacy software projects}},
type = {Master Thesis},
year = {2017}
}
@misc{Stroop1960,
author = {Stroop},
booktitle = {Chicago Daily Tribune},
month = {dec},
pages = {43},
title = {{U.S. Navy "Project KISS"}},
year = {1960}
}
@article{Ayllon2021,
author = {Ayll{\'{o}}n, Daniel and Railsback, Steven F. and Gallagher, Cara and Augusiak, Jacqueline and Baveco, Hans and Berger, Uta and Charles, Sandrine and Martin, Romina and Focks, Andreas and Galic, Nika and Liu, Chun and van Loon, E. Emiel and Nabe-Nielsen, Jacob and Piou, Cyril and Polhill, J. Gareth and Preuss, Thomas G. and Radchuk, Viktoriia and Schmolke, Amelie and Stadnicka-Michalak, Julita and Thorbek, Pernille and Grimm, Volker},
doi = {10.1016/j.envsoft.2020.104932},
issn = {13648152},
journal = {Environmental Modelling {\&} Software},
month = {feb},
pages = {104932},
title = {{Keeping modelling notebooks with TRACE: Good for you and good for environmental research and management support}},
url = {https://linkinghub.elsevier.com/retrieve/pii/S1364815220309890},
volume = {136},
year = {2021}
}
@article{Benz2001,
author = {Benz, J and Hoch, R and Legovi{\'{c}}, T},
doi = {10.1016/S0304-3800(00)00389-6},
issn = {03043800},
journal = {Ecological Modelling},
month = {mar},
number = {1-3},
pages = {3--15},
title = {{ECOBAS — modelling and documentation}},
url = {https://linkinghub.elsevier.com/retrieve/pii/S0304380000003896},
volume = {138},
year = {2001}
}
@article{Jakeman2024,
author = {Jakeman, Anthony J. and Elsawah, Sondoss and Wang, Hsiao-Hsuan and Hamilton, Serena},
journal = {Ecological Modelling},
title = {{Towards normalizing good practice across the whole modeling cycle: its instrumentation and future research topics}},
year = {2024}
}
@article{Morin2012,
author = {Morin, Andrew and Urban, Jennifer and Sliz, Piotr},
doi = {10.1371/journal.pcbi.1002598},
editor = {Lewitter, Fran},
issn = {1553-7358},
journal = {PLoS Computational Biology},
month = {jul},
number = {7},
pages = {e1002598},
title = {{A Quick Guide to Software Licensing for the Scientist-Programmer}},
url = {https://dx.plos.org/10.1371/journal.pcbi.1002598},
volume = {8},
year = {2012}
}
@book{Kernighan1999,
abstract = {With the same insight and authority that made their book The Unix Programming Environment a classic, Brian Kernighan and Rob Pike have written The Practice of Programming to help make individual programmers more effective and productive. The practice of programming is more than just writing code. Programmers must also assess tradeoffs, choose among design alternatives, debug and test, improve performance, and maintain software written by themselves and others. At the same time, they must be concerned with issues like compatibility, robustness, and reliability, while meeting specifications. The Practice of Programming covers all these topics, and more. This book is full of practical advice and real-world examples in C, C++, Java, and a variety of special-purpose languages. It includes chapters on: debugging: finding bugs quickly and methodically testing: guaranteeing that software works correctly and reliably performance: making programs faster and more compact portability: ensuring that programs run everywhere without change design: balancing goals and constraints to decide which algorithms and data structures are best interfaces: using abstraction and information hiding to control the interactions between components style: writing code that works well and is a pleasure to read notation: choosing languages and tools that let the machine do more of the work Kernighan and Pike have distilled years of experience writing programs, teaching, and working with other programmers to create this book. Anyone who writes software will profit from the principles and guidance in The Practice of Programming . 020161586XB04062001},
author = {Kernighan, Brian W. and Pike, Rob},
booktitle = {Building},
isbn = {0-201-61586-X},
pages = {272},
title = {{The Practice of Programming}},
year = {1999}
}
@inproceedings{Deissenboeck2009,
author = {Deissenboeck, F. and Juergens, E. and Lochmann, K. and Wagner, S.},
booktitle = {2009 ICSE Workshop on Software Quality},
doi = {10.1109/WOSQ.2009.5071551},
isbn = {978-1-4244-3723-8},
month = {may},
pages = {9--14},
publisher = {IEEE},
title = {{Software quality models: Purposes, usage scenarios and requirements}},
url = {http://ieeexplore.ieee.org/document/5071551/},
year = {2009}
}
@incollection{Jackson2009,
abstract = {Analytical models are a fundamental tool in the development of computer-based systems of every kind: their essential purpose is to support human understanding and reasoning in development. To support reasoning, models must be substantially formal. The relationship between a formal model and its-typically-non-formal subject demands care: particular attention must be paid to the model interpretation, which maps its formal terms to the phenomena of the subject. An analytical model is to be regarded not as an assertion, but as a predicate within a larger logical structure of reasoning. Analogical models, such as databases, act as run-time surrogates for some parts of the problem world; in their design the properties of the model itself must be carefully distinguished from those of its subject. Some models may be informal: informal models have many legitimate uses, but cannot serve as a basis for formal reasoning. {\textcopyright} 2009 Springer Berlin Heidelberg.},
author = {Jackson, Michael},
booktitle = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
doi = {10.1007/978-3-642-02463-4_5},
file = {:Users/Lemmen/Downloads/ModelNotes.pdf:pdf},
isbn = {3642024629},
issn = {03029743},
pages = {68--81},
title = {{Some notes on models and modelling}},
url = {http://link.springer.com/10.1007/978-3-642-02463-4{\_}5},
volume = {5600 LNCS},
year = {2009}
}
@article{Katz2019,
author = {Katz, Daniel S. and McInnes, Lois Curfman and Bernholdt, David E. and Mayes, Abigail Cabunoc and Hong, Neil P. Chue and Duckles, Jonah and Gesing, Sandra and Heroux, Michael A. and Hettrick, Simon and Jimenez, Rafael C. and Pierce, Marlon and Weaver, Belinda and Wilkins-Diehr, Nancy},
doi = {10.1109/MCSE.2018.2883051},
issn = {1521-9615},
journal = {Computing in Science {\&} Engineering},
month = {mar},
number = {2},
pages = {8--24},
title = {{Community Organizations: Changing the Culture in Which Research Software Is Developed and Sustained}},
url = {https://ieeexplore.ieee.org/document/8565942/},
volume = {21},
year = {2019}
}
@inproceedings{Patel2020,
address = {New York, NY, USA},
author = {Patel, Rohan and Breton, Pedro and Baker, Catherine M. and El-Glaly, Yasmine N. and Shinohara, Kristen},
booktitle = {Extended Abstracts of the 2020 CHI Conference on Human Factors in Computing Systems},
doi = {10.1145/3334480.3383103},
isbn = {9781450368193},
month = {apr},
pages = {1--9},
publisher = {ACM},
title = {{Why Software is Not Accessible: Technology Professionals' Perspectives and Challenges}},
url = {https://dl.acm.org/doi/10.1145/3334480.3383103},
year = {2020}
}
@article{Wang2023,
abstract = {Models of socio-environmental or social-ecological systems (SES) commonly address problems requiring interdisciplinary scientific expertise and input from a heterogeneous group of stakeholders. In SES modelling multiple interactions occur on different scales among various phenomena. These scale phenomena include the technical, such as system variables, process detail, inputs and outputs, which most often require spatial, temporal, thematic and organisational choices. From a good practice and project efficiency perspective, the problem scoping and conceptual model formulation phase of modelling is the one to address well from the outset. During this phase, intense and substantive discussions should arise regarding appropriate scales at which to represent the different phenomena. Although the details of these discussions influence the path of model development, they are seldom documented and as a result often forgotten. We draw upon personal experience with existing protocols and communications in recent literature to propose preliminary guidelines for documenting these early discussions about the scale(s) of the studied phenomena. Our guidelines aim to aid modelling group members in building and capturing the richness of their rationale for scoping and scale decisions. The resulting transcripts are intended to promote transparency of modelling decisions and provide essential support for the justification of the final model for its intended use. They also facilitate adaptive modifications of the pathway of model development via retracing decisions and iterative reflection upon alternative scale options.},
author = {Wang, Hsiao-Hsuan and {Van Voorn}, George and Grant, William E. and Zare, Fateme and Giupponi, Carlo and Steinmann, Patrick and M{\"{u}}ller, Birgit and Elsawah, Sondoss and {Van Delden}, Hedwig and Athanasiadis, Ioannis N. and Sun, Zhanli and Jager, Wander and Little, John C. and Jakeman, Anthony J.},
doi = {10.18174/sesmo.18563},
file = {:Users/Lemmen/Downloads/Wang{\_}2023{\_}Scale{\_}decisions.pdf:pdf},
issn = {2663-3027},
journal = {Socio-Environmental Systems Modelling},
month = {mar},
pages = {18563},
title = {{Scale decisions and good practices in socio-environmental systems modelling: guidance and documentation during problem scoping and model formulation}},
url = {https://sesmo.org/article/view/18563},
volume = {5},
year = {2023}
}
@article{Lemmen2024,
author = {Lemmen, Carsten and Hokamp, Sascha and {\"{O}}rey, Serra and Scheffran, J{\"{u}}rgen},
doi = {10.21105/joss.05731},
issn = {2475-9066},
journal = {Journal of Open Source Software},
month = {mar},
number = {95},
pages = {5731},
title = {{Viable North Sea (ViNoS): A NetLogo Agent-based Model of German Small-scale Fisheries}},
url = {https://joss.theoj.org/papers/10.21105/joss.05731},
volume = {9},
year = {2024}
}
@incollection{Stallman1983,
author = {Stallman, Richard M.},
booktitle = {Free Software, Free Society: Selected Essays of Richard M. Stallman},
editor = {Gay, Joshua},
pages = {26--27},
title = {{New Unix implementation}},
year = {1983}
}
@article{Ritchie1974,
abstract = {The unix* shell is a command programming language that provides an interface to the unix operating system. It contains several mechanisms found in algorithmic languages such as control‐flow primitives, variables, and parameter passing. Constructs such as while, if, for, and case are available. Two‐way communication is possible between the shell and commands. String‐valued parameters, typically file names or flags, may be passed to a command. A return code is set by commands and may be used to determine the flow of control, and the standard output from a command may be used as input to the shell. The shell can modify the environment in which commands run. Input and output can be redirected and processes that communicate through “pipes” can be invoked. Commands are found by searching directories in the file system in a sequence that can be defined by the user. {\textcopyright} 1978 The Bell System Technical Journal},
author = {Ritchie, Dennis M. and Thompson, Ken},
doi = {10.1002/j.1538-7305.1978.tb02139.x},
file = {:Users/Lemmen/Downloads/unix.pdf:pdf},
issn = {00058580},
journal = {Communications of the ACM},
keywords = {1974,30,32,4,and phrases,association for computing machinery,command language,copyright,cr categories,file system,operating,pdp -11,system,time-sharing},
month = {jul},
number = {7},
pages = {365--375},
title = {{UNIX Time-Sharing System: The UNIX Shell}},
url = {https://ieeexplore.ieee.org/document/6770407},
volume = {17},
year = {1974}
}
@incollection{Stallman1996,
author = {Stallman, Richard M.},
booktitle = {Free Software, Free Society: Selected Essays of Richard M. Stallman},
editor = {{Joshua Gay}},
pages = {43--45},
title = {{Free Software Definition}},
year = {1996}
}
@inproceedings{Bai2021,
address = {New York, NY, USA},
author = {Bai, Gina R. and Smith, Justin and Stolee, Kathryn T.},
booktitle = {Proceedings of the 26th ACM Conference on Innovation and Technology in Computer Science Education V. 1},
doi = {10.1145/3430665.3456368},
isbn = {9781450382144},
month = {jun},
pages = {248--254},
publisher = {ACM},
title = {{How Students Unit Test: Perceptions, Practices, and Pitfalls}},
url = {https://dl.acm.org/doi/10.1145/3430665.3456368},
year = {2021}
}
@article{Wilkinson2016,
abstract = {There is an urgent need to improve the infrastructure supporting the reuse of scholarly data. A diverse set of stakeholders—representing academia, industry, funding agencies, and scholarly publishers—have come together to design and jointly endorse a concise and measureable set of principles that we refer to as the FAIR Data Principles. The intent is that these may act as a guideline for those wishing to enhance the reusability of their data holdings. Distinct from peer initiatives that focus on the human scholar, the FAIR Principles put specific emphasis on enhancing the ability of machines to automatically find and use the data, in addition to supporting its reuse by individuals. This Comment is the first formal publication of the FAIR Principles, and includes the rationale behind them, and some exemplar implementations in the community.},
author = {Wilkinson, Mark D. and Dumontier, Michel and Aalbersberg, IJsbrand Jan and Appleton, Gabrielle and Axton, Myles and Baak, Arie and Blomberg, Niklas and Boiten, Jan-Willem and {da Silva Santos}, Luiz Bonino and Bourne, Philip E. and Bouwman, Jildau and Brookes, Anthony J. and Clark, Tim and Crosas, Merc{\`{e}} and Dillo, Ingrid and Dumon, Olivier and Edmunds, Scott and Evelo, Chris T. and Finkers, Richard and Gonzalez-Beltran, Alejandra and Gray, Alasdair J.G. and Groth, Paul and Goble, Carole and Grethe, Jeffrey S. and Heringa, Jaap and {'t Hoen}, Peter A.C and Hooft, Rob and Kuhn, Tobias and Kok, Ruben and Kok, Joost and Lusher, Scott J. and Martone, Maryann E. and Mons, Albert and Packer, Abel L. and Persson, Bengt and Rocca-Serra, Philippe and Roos, Marco and van Schaik, Rene and Sansone, Susanna-Assunta and Schultes, Erik and Sengstag, Thierry and Slater, Ted and Strawn, George and Swertz, Morris A. and Thompson, Mark and van der Lei, Johan and van Mulligen, Erik and Velterop, Jan and Waagmeester, Andra and Wittenburg, Peter and Wolstencroft, Katherine and Zhao, Jun and Mons, Barend},
doi = {10.1038/sdata.2016.18},
issn = {2052-4463},
journal = {Scientific Data},
month = {mar},
number = {1},
pages = {160018},
title = {{The FAIR Guiding Principles for scientific data management and stewardship}},
url = {https://www.nature.com/articles/sdata201618},
volume = {3},
year = {2016}
}
@book{Stachowiak1973,
address = {Berlin},
author = {Stachowiak, Herbert},
keywords = {1973,425c,model-theory,model-theory-group},
publisher = {Springer},
title = {{Allgemeine Modelltheorie}},
url = {http://www.citeulike.org/group/13305/article/7013052},
year = {1973}
}
@article{Jakeman2006,
abstract = {Models are increasingly being relied upon to inform and support natural resource management. They are incorporating an ever broader range of disciplines and now often confront people without strong quantitative or model-building backgrounds. These trends imply a need for wider awareness of what constitutes good model-development practice, including reporting of models to users and sceptical review of models by users. To this end the paper outlines ten basic steps of good, disciplined model practice. The aim is to develop purposeful, credible models from data and prior knowledge, in consort with end-users, with every stage open to critical review and revision. Best practice entails identifying clearly the clients and objectives of the modelling exercise; documenting the nature (quantity, quality, limitations) of the data used to construct and test the model; providing a strong rationale for the choice of model family and features (encompassing review of alternative approaches); justifying the techniques used to calibrate the model; serious analysis, testing and discussion of model performance; and making a resultant statement of model assumptions, utility, accuracy, limitations, and scope for improvement. In natural resource management applications, these steps will be a learning process, even a partnership, between model developers, clients and other interested parties. {\textcopyright} 2006 Elsevier Ltd. All rights reserved.},
author = {Jakeman, A.J. and Letcher, R.A. and Norton, J.P.},
doi = {10.1016/j.envsoft.2006.01.004},
file = {:Users/Lemmen/Downloads/1-s2.0-S1364815206000107-main.pdf:pdf},
issn = {13648152},
journal = {Environmental Modelling {\&} Software},
keywords = {Integrated assessment,Model testing,Sensitivity,System identification,Uncertainty,Verification},
month = {may},
number = {5},
pages = {602--614},
title = {{Ten iterative steps in development and evaluation of environmental models}},
url = {https://linkinghub.elsevier.com/retrieve/pii/S1364815206000107},
volume = {21},
year = {2006}
}
@article{Lahtinen2017,
author = {Lahtinen, Tuomas J. and Guillaume, Joseph H.A. and H{\"{a}}m{\"{a}}l{\"{a}}inen, Raimo P.},
doi = {10.1016/j.envsoft.2017.02.019},
issn = {13648152},
journal = {Environmental Modelling {\&} Software},
month = {jun},
pages = {74--81},
title = {{Why pay attention to paths in the practice of environmental modelling?}},
url = {https://linkinghub.elsevier.com/retrieve/pii/S1364815216309835},
volume = {92},
year = {2017}
}
@article{Wilson2016,
abstract = {Since its start in 1998, Software Carpentry has evolved from a week-long training course at the US national laboratories into a worldwide volunteer effort to improve researchers' computing skills. This paper explains what we have learned along the way, the challenges we now face, and our plans for the future.},
archivePrefix = {arXiv},
arxivId = {1307.5448},
author = {Wilson, Greg},
doi = {10.12688/f1000research.3-62.v2},
eprint = {1307.5448},
file = {:Users/Lemmen/Downloads/Software{\_}Carpentry{\_}Lessons{\_}learned.pdf:pdf},
issn = {2046-1402},
journal = {F1000Research},
keywords = {Education,Scientific Computing,Software Carpentry,Training},
month = {jan},
pages = {62},
title = {{Software Carpentry: lessons learned}},
url = {https://f1000research.com/articles/3-62/v2},
volume = {3},
year = {2016}
}
@techreport{DFG2022,
address = {Weinheim},
author = {{Commission on Professional Self Regulation in Science}},
institution = {Deutsche Forschungsgemeinschaft},
title = {{Safeguarding Good Scientific Practice}},
year = {2013}
}
@article{Grimm2006,
author = {Grimm, Volker and Berger, Uta and Bastiansen, Finn and Eliassen, Sigrunn and Ginot, Vincent and Giske, Jarl and Goss-Custard, John and Grand, Tamara and Heinz, Simone K. and Huse, Geir and Huth, Andreas and Jepsen, Jane U. and J{\o}rgensen, Christian and Mooij, Wolf M. and M{\"{u}}ller, Birgit and Pe'er, Guy and Piou, Cyril and Railsback, Steven F. and Robbins, Andrew M. and Robbins, Martha M. and Rossmanith, Eva and R{\"{u}}ger, Nadja and Strand, Espen and Souissi, Sami and Stillman, Richard A. and Vab{\o}, Rune and Visser, Ute and DeAngelis, Donald L.},
doi = {10.1016/j.ecolmodel.2006.04.023},
issn = {03043800},
journal = {Ecological Modelling},
month = {sep},
number = {1-2},
pages = {115--126},
title = {{A standard protocol for describing individual-based and agent-based models}},
url = {https://linkinghub.elsevier.com/retrieve/pii/S0304380006002043},
volume = {198},
year = {2006}
}
@inproceedings{Beck2001,
author = {Beck, Kent and Beedle, Mike and van Bennekum, Arie and Cockburn, Alistair and Cunningham, Ward and Fowler, Martin and Martin, Robert C. and Mellor, Steve and Thomas, Dave and Grenning, James and Highsmith, Jim and Hunt, Andrew and Jeffries, Ron and Kern, Jon and Marick, Brian and Schwaber, Ken and Sutherland, Jeff},
booktitle = {Agile Alliance},
pages = {Feb 11--13},
title = {{Manifesto for Agile Software Development}},
year = {2001}
}
@article{Soito2017,
abstract = {Software plays a significant role in modern academic research, yet lacks a similarly significant presence in the scholarly record. With increasing interest in promoting reproducible research, curating software as a scholarly resource not only promotes access to these tools, but also provides recognition for the intellectual efforts that go into their development. This work reviews existing standards for identifying, promoting discovery of, and providing credit for software development work. In addition, it shows how these guidelines have been integrated into existing tools and community cultures, and provides recommendations for future software curation efforts.{\^{A}}},
author = {Soito, Laura and Hwang, Lorraine J},
doi = {10.2218/ijdc.v11i2.390},
issn = {1746-8256},
journal = {International Journal of Digital Curation},
month = {jul},
number = {2},
pages = {48--63},
title = {{Citations for Software: Providing Identification, Access and Recognition for Research Software}},
url = {http://ijdc.net/article/view/11.2.48},
volume = {11},
year = {2017}
}
@article{Barnes2010,
author = {Barnes, Nick},
doi = {10.1038/467753a},
file = {:Users/Lemmen/Downloads/467753a.pdf:pdf},
issn = {0028-0836},
journal = {Nature},
month = {oct},
number = {7317},
pages = {753--753},
pmid = {20944687},
title = {{Publish your computer code: it is good enough}},
url = {https://www.nature.com/articles/467753a},
volume = {467},
year = {2010}
}
@inproceedings{Prabhu2011,
address = {New York, NY, USA},
author = {Prabhu, Prakash and Jablin, Thomas B. and Raman, Arun and Zhang, Yun and Huang, Jialu and Kim, Hanjun and Johnson, Nick P. and Liu, Feng and Ghosh, Soumyadeep and Beard, Stephen and Oh, Taewook and Zoufaly, Matthew and Walker, David and August, David I.},
booktitle = {State of the Practice Reports},
doi = {10.1145/2063348.2063374},
isbn = {9781450311397},
month = {nov},
pages = {1--12},
publisher = {ACM},
title = {{A survey of the practice of computational science}},
url = {https://dl.acm.org/doi/10.1145/2063348.2063374},
year = {2011}
}
@article{Schneider2022,
abstract = {Online platforms train users to interact with each other through certain widespread interface designs. This article argues that an “implicit feudalism” informs the available options for community management on the dominant platforms for online communities. It is a pattern that grants user-administrators absolutist reign over their fiefdoms, with competition among them as the primary mechanism for quality control, typically under rules set by platform companies. Implicit feudalism emerged from technical conditions dating to early online networks. In light of alternative management mechanisms with more democratic features, it becomes all the more clear that implicit feudalism is not a necessary condition.},
author = {Schneider, Nathan},
doi = {10.1177/1461444820986553},
file = {:Users/Lemmen/Downloads/schneider-2021-admins-mods-and-benevolent-dictators-for-life-the-implicit-feudalism-of-online-communities.pdf:pdf},
issn = {1461-4448},
journal = {New Media {\&} Society},
keywords = {Media archeology,online communities,online governance,social media,software studies},
month = {sep},
number = {9},
pages = {1965--1985},
title = {{Admins, mods, and benevolent dictators for life: The implicit feudalism of online communities}},
url = {http://journals.sagepub.com/doi/10.1177/1461444820986553},
volume = {24},
year = {2022}
}
@article{Grimm2020b,
author = {Grimm, Volker},
doi = {10.1016/j.ecolmodel.2020.109105},
issn = {03043800},
journal = {Ecological Modelling},
month = {jul},
pages = {109105},
title = {{The ODD protocol: An update with guidance to support wider and more consistent use}},
url = {https://linkinghub.elsevier.com/retrieve/pii/S0304380020301770},
volume = {428},
year = {2020}
}
@incollection{Smagorinsky1982,
author = {Smagorinsky, Joseph},
booktitle = {Land surface processes in atmospheric general circulation models},
edition = {2},
pages = {3--18},
title = {{Large-scale climate modeling and small-scale physical processes}},
year = {1982}
}
@inproceedings{Wong,
author = {Wong, W.E. and Horgan, J.R. and London, S. and Agrawal, H.},
booktitle = {Proceedings The Eighth International Symposium on Software Reliability Engineering},
doi = {10.1109/ISSRE.1997.630875},
isbn = {0-8186-8120-9},
pages = {264--274},
publisher = {IEEE Comput. Soc},
title = {{A study of effective regression testing in practice}},
url = {http://ieeexplore.ieee.org/document/630875/}
}
@incollection{Stallman1984,
author = {Stallman, Richard M.},
booktitle = {Free Software, Free Society: Selected Essays of Richard M. Stallman},
editor = {Gay, Joshua},
title = {{The GNU Manifesto}},
year = {1984}
}
@misc{Wilensky1999,
address = {Evanston, IL},
author = {Wilensky, Uri},
institution = {Center for Connected Learning and Computer-Based Modeling, Northwestern University},
title = {{NetLogo}},
year = {1999}
}
@article{Haase2023,
abstract = {The human dimension is one major source of uncertainty in the management of social-ecological systems such as fisheries. Agent-based models (ABMs) can help to reduce these uncertainties by making it possible to model and simulate human behavior. To understand how ABMs can be applied in fisheries science, a classification scheme was developed based on reviews in other social-ecological domains, theoretical frameworks, and documentation standards. This classification scheme was subsequently used to review agent-based simulation studies that modeled human decision-making in a fisheries context to identify trends and knowledge gaps. Applying the classification scheme revealed that the existing fisheries-related ABMs employ a variety of decision theories, policies, social interactions, agent memories, and data sources, and revealed a wide potential for applications of ABMs to a broad range of research questions and management recommendations. Nevertheless, it turned out that it is, so far, virtually unexplored how environmental factors influence fishing decisions or how social norms and learning influence fishing behavior. It also became clear that the documentation and provenance information of ABMs need to be improved–e.g., by applying standardized documentation procedures, such as ODD + D and TRACE–to enhance the credibility, transparency, and reusability of ABMs in fisheries science.},
author = {Haase, Kevin and Reinhardt, Oliver and Lewin, Wolf Christian and Weltersbach, Marc Simon and Strehlow, Harry V. and Uhrmacher, Adelinde M.},
doi = {10.1080/23308249.2023.2201635},
issn = {23308257},
journal = {Reviews in Fisheries Science and Aquaculture},
keywords = {Agent-based models,coupled human and natural systems,decision-making,provenance,social-ecological systems},
month = {jul},
number = {3},
pages = {372--395},
title = {{Agent-Based Simulation Models in Fisheries Science}},
url = {https://www.tandfonline.com/doi/full/10.1080/23308249.2023.2201635},
volume = {31},
year = {2023}
}
@article{Thiele2015,
abstract = {There are two major limitations to the potential of computational models in ecology for producing general insights: their design is path‐dependent, reflecting different underlying questions, assumptions, and data, and there is too little robustness analysis exploring where the model mechanisms explaining certain observations break down. We here argue that both limitations could be overcome if modellers in ecology would more often replicate existing models, try to break the models, and explore modifications. Replication comprises the re‐implementation of an existing model and the replication of its results. Breaking models means to identify under what conditions the mechanisms represented in a model can no longer explain observed phenomena. The benefits of replication include less effort being spent to enter the iterative stage of model development and having more time for systematic robustness analysis. A culture of replication would lead to increased credibility, coherence and efficiency of computational modelling and thereby facilitate theory development.},
author = {Thiele, Jan C. and Grimm, Volker},
doi = {10.1111/oik.02170},
file = {:Users/Lemmen/Downloads/Oikos - 2015 - Thiele - Replicating and breaking models  good for you and good for ecology.pdf:pdf},
issn = {0030-1299},
journal = {Oikos},
month = {jun},
number = {6},
pages = {691--696},
title = {{Replicating and breaking models: good for you and good for ecology}},
url = {https://onlinelibrary.wiley.com/doi/10.1111/oik.02170},
volume = {124},
year = {2015}
}
@article{Siewertsen2013,
abstract = {Abstract. We have ported an implementation of the spin-up for marine ecosystem models based on transport matrices to graphics processing units (GPUs). The original implementation was designed for distributed-memory architectures and uses the Portable, Extensible Toolkit for Scientific Computation (PETSc) library that is based on the Message Passing Interface (MPI) standard. The spin-up computes a steady seasonal cycle of ecosystem tracers with climatological ocean circulation data as forcing. Since the transport is linear with respect to the tracers, the resulting operator is represented by matrices. Each iteration of the spin-up involves two matrix-vector multiplications and the evaluation of the used biogeochemical model. The original code was written in C and Fortran. On the GPU, we use the Compute Unified Device Architecture (CUDA) standard, a customized version of PETSc and a commercial CUDA Fortran compiler. We describe the extensions to PETSc and the modifications of the original C and Fortran codes that had to be done. Here we make use of freely available libraries for the GPU. We analyze the computational effort of the main parts of the spin-up for two exemplar ecosystem models and compare the overall computational time to those necessary on different CPUs. The results show that a consumer GPU can compete with a significant number of cluster CPUs without further code optimization.},
author = {Siewertsen, E. and Piwonski, J. and Slawig, T.},
doi = {10.5194/gmd-6-17-2013},
issn = {1991-9603},
journal = {Geoscientific Model Development},
month = {jan},
number = {1},
pages = {17--28},
title = {{Porting marine ecosystem model spin-up using transport matrices to GPUs}},
url = {https://gmd.copernicus.org/articles/6/17/2013/},
volume = {6},
year = {2013}
}
@article{Berger2024,
author = {Berger, Uta and Bell, Andrew and Barton, C. Michael and Chappin, Emile and Dre{\ss}ler, Gunnar and Filatova, Tatiana and Fronville, Thibault and Lee, Allen and van Loon, Emiel and Lorscheid, Iris and Meyer, Matthias and M{\"{u}}ller, Birgit and Piou, Cyril and Radchuk, Viktoriia and Roxburgh, Nicholas and Sch{\"{u}}ler, Lennart and Troost, Christian and Wijermans, Nanda and Williams, Tim G. and Wimmler, Marie-Christin and Grimm, Volker},
doi = {10.1016/j.envsoft.2024.106003},
issn = {13648152},
journal = {Environmental Modelling {\&} Software},
month = {apr},
pages = {106003},
title = {{Towards reusable building blocks for agent-based modelling and theory development}},
url = {https://linkinghub.elsevier.com/retrieve/pii/S1364815224000641},
volume = {175},
year = {2024}
}
@misc{Comses2024codebase,
author = {{Network for Computational Modeling in the Social and Ecological Sciences}},
title = {{CoMSES Network Computational Model Library}},
url = {https://www.comses.net/codebases/},
year = {2024}
}
@article{Sabzian2018,
author = {Sabzian, Hossein and Shafia, Mohammad Ali and Naeini, Ali Bonyadi and Jandaghi, Gholamreza},
doi = {10.22059/IJMS.2018.261178.673190},
file = {:Users/Lemmen/Downloads/IJMS{\_}Volume 11{\_}Issue 4{\_}Pages 659-692.pdf:pdf},
journal = {Iranian Journal of Management Studies},
number = {4},
pages = {659--692},
title = {{A Review of Agent-based Modeling (ABM) Concepts and Some of its Main Applications in Management Science}},
volume = {11},
year = {2018}
}
@article{Gurbani2010,
abstract = {Introduction},
author = {Gurbani, Vijay K. and Garvert, Anita and Herbsleb, James D.},
doi = {10.1145/1646353.1646392},
file = {:Users/Lemmen/Downloads/1646353.1646392.pdf:pdf},
issn = {0001-0782},
journal = {Communications of the ACM},
month = {feb},
number = {2},
pages = {155--159},
title = {{Managing a corporate open source software asset}},
url = {https://dl.acm.org/doi/10.1145/1646353.1646392},
volume = {53},
year = {2010}
}
@article{Refsgaard2004,
abstract = {Some scientists argue, with reference to Popper's scientific philosophical school, that models cannot be verified or validated. Other scientists and many practitioners nevertheless use these terms, but with very different meanings. As a result of an increasing number of examples of model malpractice and mistrust to the credibility of models, several modelling guidelines are being elaborated in recent years with the aim of improving the quality of modelling studies. This gap between the views and the lack of consensus experienced in the scientific community and the strongly perceived need for commonly agreed modelling guidelines is constraining the optimal use and benefits of models. This paper proposes a framework for quality assurance guidelines, including a consistent terminology and a foundation for a methodology bridging the gap between scientific philosophy and pragmatic modelling. A distinction is made between the conceptual model, the model code and the site-specific model. A conceptual model is subject to confirmation or falsification like scientific theories. A model code may be verified within given ranges of applicability and ranges of accuracy, but it can never be universally verified. Similarly, a model may be validated, but only with reference to site-specific applications and to pre-specified performance (accuracy) criteria. Thus, a model's validity will always be limited in terms of space, time, boundary conditions and types of application. This implies a continuous interaction between manager and modeller in order to establish suitable accuracy criteria and predictions associated with uncertainty analysis. {\textcopyright} 2003 Elsevier Ltd. All rights reserved.},
author = {Refsgaard, Jens Christian and Henriksen, Hans J{\o}rgen},
doi = {10.1016/j.advwatres.2003.08.006},
file = {:Users/Lemmen/Downloads/1-s2.0-S0309170803001489-main.pdf:pdf},
issn = {03091708},
journal = {Advances in Water Resources},
keywords = {Confirmation,Domain of applicability,Model guidelines,Scientific philosophy,Uncertainty,Validation,Verification},
month = {jan},
number = {1},
pages = {71--82},
title = {{Modelling guidelines––terminology and guiding principles}},
url = {https://linkinghub.elsevier.com/retrieve/pii/S0309170803001489},
volume = {27},
year = {2004}
}
@inproceedings{Sommer2024,
address = {W{\"{u}}rzburg},
author = {Sommer, Philipp Sebastian and Sa{\ss}, B. L. and Benninghoff, Markus},
booktitle = {Conference for Research Software Engineering in Germany (deRSE24)},
doi = {10.5281/zenodo.11320120},
title = {{Enhancing Research Software Sustainability through Modular Open-Source Software Templates (v1.0.0)}},
year = {2024}
}
@article{Flesch1950,
abstract = {As programmers, we've all seen source code that's so ugly and buggy it makes our brain ache. Over the past five years, authors Dustin Boswell and Trevor Foucher have analyzed hundreds of examples of "bad code" (much of it their own) to determine why they're bad and how they could be improved. Their conclusion? You need to write code that minimizes the time it would take someone else to understand it—even if that someone else is you. This book focuses on basic principles and practical techniques you can apply every time you write code. Using easy-to-digest code examples from different languages, each chapter dives into a different aspect of coding, and demonstrates how you can make your code easy to understand. Simplify naming, commenting, and formatting with tips that apply to every line of code Refine your program's loops, logic, and variables to reduce complexity and confusion Attack problems at the function level, such as reorganizing blocks of code to do one task at a time Write effective test code that is thorough and concise—as well as readable "Being aware of how the code you create affects those who look at it later is an important part of developing software. The authors did a great job in taking you through the different aspects of this challenge, explaining the details with instructive examples." —Michael Hunger, passionate Software Developer},
author = {Flesch, Rudolf},
doi = {10.2307/1225957},
file = {:Users/Lemmen/Downloads/styleboswell.pdf:pdf},
issn = {00389765},
journal = {Stanford Law Review},
month = {apr},
number = {3},
pages = {625},
title = {{The Art of Readable Writing}},
url = {https://www.jstor.org/stable/1225957?origin=crossref},
volume = {2},
year = {1950}
}
@inproceedings{Hannay2009,
author = {Hannay, Jo Erskine and MacLeod, Carolyn and Singer, Janice and Langtangen, Hans Petter and Pfahl, Dietmar and Wilson, Greg},
booktitle = {2009 ICSE Workshop on Software Engineering for Computational Science and Engineering},
doi = {10.1109/SECSE.2009.5069155},
isbn = {978-1-4244-3737-5},
month = {may},
pages = {1--8},
publisher = {IEEE},
title = {{How do scientists develop and use scientific software?}},
url = {http://ieeexplore.ieee.org/document/5069155/},
year = {2009}
}
@article{Ellims2006,
author = {Ellims, Michael and Bridges, James and Ince, Darrel C.},
doi = {10.1007/s10664-006-5964-9},
issn = {1382-3256},
journal = {Empirical Software Engineering},
month = {mar},
number = {1},
pages = {5--31},
title = {{The Economics of Unit Testing}},
url = {http://link.springer.com/10.1007/s10664-006-5964-9},
volume = {11},
year = {2006}
}
@inproceedings{Gurbani2006,
abstract = {Open source practices and tools have proven to be highly effective for overcoming the many problems of geographically distributed software development. We know relatively little, however, about the range of settings in which they work. In particular, can corporations use the open source development model effectively for software projects inside the corporate domain? Or are these tools and practices incompatible with development environments, management practices, and market-driven schedule and feature decisions typical of a commercial software house? We present a case study of open source software development methodology adopted by a significant commercial software project in the telecommunications domain. We extract a number of lessons learned from the experience, and identify open research questions. Copyright 2006 ACM.},
address = {New York, NY, USA},
author = {Gurbani, Vijay K. and Garvert, Anita and Herbsleb, James D.},
booktitle = {Proceedings of the 28th international conference on Software engineering},
doi = {10.1145/1134285.1134352},
file = {:Users/Lemmen/Downloads/A{\_}case{\_}study{\_}of{\_}a{\_}corporate{\_}open{\_}source.pdf:pdf},
isbn = {1595933751},
issn = {02705257},
keywords = {Architecture,Open source,Session initiation protocol,Software development},
month = {may},
pages = {472--481},
publisher = {ACM},
title = {{A case study of a corporate open source development model}},
url = {https://dl.acm.org/doi/10.1145/1134285.1134352},
volume = {2006},
year = {2006}
}
@article{Grimm2020,
abstract = {The Overview, Design concepts and Details (ODD) protocol for describing Individual-and Agent-Based Models (ABMs) is now widely accepted and used to document such models in journal articles. As a standardized document for providing a consistent, logical and readable account of the structure and dynamics of ABMs, some research groups also find it useful as a workflow for model design. Even so, there are still limitations to ODD that obstruct its more widespread adoption. Such limitations are discussed and addressed in this paper: the limited availability of guidance on how to use ODD; the length of ODD documents; limitations of ODD for highly complex models; lack of sufficient details of many ODDs to enable reimplementation without access to the model code; and the lack of provision for sections in the document structure covering model design ratio-nale, the model's underlying narrative, and the means by which the model's fitness for purpose is evaluated. We document the steps we have taken to provide better guidance on: structuring complex ODDs and an ODD summary for inclusion in a journal article (with full details in supplementary material; Table 1); using ODD to point readers to relevant sections of the model code; update the document structure to include sections on model rationale and evaluation. We also further advocate the need for standard descriptions of simulation experiments and argue that ODD can in principle be used for any type of simulation model. Thereby ODD would provide a lingua franca for simulation modelling.},
author = {Grimm, Volker and Railsback, Steven F. and Vincenot, Christian E. and Berger, Uta and Gallagher, Cara and DeAngelis, Donald L. and Edmonds, Bruce and Ge, Jiaqi and Giske, Jarl and Groeneveld, J{\"{u}}rgen and Johnston, Alice S.A. and Milles, Alexander and Nabe-Nielsen, Jacob and Polhill, J. Gareth and Radchuk, Viktoriia and Rohw{\"{a}}der, Marie-Sophie and Stillman, Richard A. and Thiele, Jan C. and Ayll{\'{o}}n, Daniel},
doi = {10.18564/jasss.4259},
file = {:Users/Lemmen/papers/Grimm2020{\_}etal{\_}jartificialsocietiessocialsimulation.pdf:pdf},
issn = {1460-7425},
journal = {Journal of Artificial Societies and Social Simulation},
keywords = {Agent-based model,Best practice,Documentation,Individual-based model,Simulation model,Standardization},
number = {2},
title = {{The ODD Protocol for Describing Agent-Based and Other Simulation Models: A Second Update to Improve Clarity, Replication, and Structural Realism}},
url = {http://jasss.soc.surrey.ac.uk/23/2/7.html},
volume = {23},
year = {2020}
}
@article{Romanowska2015,
abstract = {With the current surge of simulation studies in archaeology, there is a growing concern for the lack of engagement and feedback between modelers and domain specialists. To facilitate this dialogue, I present a compact guide to the simulation modeling process applied to a common research topic and the focus of this special issue of Human Biology—human dispersals. The process of developing a simulation is divided into nine steps grouped in three phases. The conceptual phase consists of identifying research questions (step 1), finding the most suitable method (step 2), designing the general framework and the resolution of the simulation (step 3), and filling in that framework with the modeled entities and the rules of interactions (step 4). This is followed by the technical phase of coding and testing (step 5), parameterizing the simulation (step 6), and running it (step 7), and the results of the simulation are analyzed and recontextualized (step 8). In the dissemination phase, the findings of the model are disseminated in publications and code repositories (step 9). Each step is defined and characterized and then illustrated with examples of published human dispersal simulation studies. While not aiming to be a comprehensive textbook-style guide to simulation, this overview of the process of modeling human dispersals should arm any nonmodeler with enough understanding to evaluate the quality, strengths, and weaknesses of any particular archaeological simulation and provide a starting point for further exploration of this common scientific tool.},
author = {Romanowska, Iza},
doi = {10.13110/humanbiology.87.3.0169},
issn = {00187143},
journal = {Human Biology},
keywords = {Agent-based modeling,Archaeology,Human dispersal,Simulation},
number = {3},
pages = {169},
title = {{So You Think You Can Model? A Guide to Building and Evaluating Archaeological Simulation Models of Dispersals}},
url = {http://www.jstor.org/stable/10.13110/humanbiology.87.3.0169 https://muse.jhu.edu/article/611644},
volume = {87},
year = {2015}
}
@techreport{Lemmen2023,
author = {Lemmen, Carsten and Hokamp, Sascha and {\"{O}}rey, Serra and Scheffran, J{\"{u}}rgen and Seo, Jieun},
booktitle = {COMSES.net},
title = {{ODD Protocol for Viable North Sea (ViNoS): A NetLogo Agent-based Model of German Small-scale Fisheries}},
year = {2023}
}
@article{Barton2022,
author = {Barton, C. Michael and Lee, Allen and Janssen, Marco A. and van der Leeuw, Sander and Tucker, Gregory E. and Porter, Cheryl and Greenberg, Joshua and Swantek, Laura and Frank, Karin and Chen, Min and Jagers, H. R. Albert},
doi = {10.1073/pnas.2202112119},
issn = {0027-8424},
journal = {Proceedings of the National Academy of Sciences},
month = {aug},
number = {35},
title = {{How to make models more useful}},
url = {https://pnas.org/doi/full/10.1073/pnas.2202112119},
volume = {119},
year = {2022}
}
@article{Chen2004,
abstract = {A recent editorial in Empirical Software Engineering suggested that open-source software projects offer a great deal of data that can be used for experimentation. These data not only include source code, but also artifacts such as defect reports and update logs. A common type of update log that experimenters may wish to investigate is the ChangeLog, which lists changes and the reasons for which they were made. ChangeLog files are created to support the development of software rather than for the needs of researchers, so questions need to be asked about the limitations of using them to support research. This paper presents evidence that the ChangeLog files provided at three open-source web sites were incomplete. We examined at least three ChangeLog files for each of three different open-source software products, namely, GNUJSP, GCC-g++, and Jikes. We developed a method for counting changes that ensures that, as far as possible, each individual ChangeLog entry is treated as a single change. For each ChangeLog file, we compared the actual changes in the source code to the entries in the ChangeLog file and discovered significant omissions. For example, using our change-counting method, only 35 of the 93 changes in version 1.11 of Jikes appear in the ChangeLog file - that is, over 62{\%} of the changes were not recorded there. The percentage of omissions we found ranged from 3.7 to 78.6{\%}. These are significant omissions that should be taken into account when using ChangeLog files for research. Before using ChangeLog files as a basis for research into the development and maintenance of open-source software, experimenters should carefully check for omissions and inaccuracies.},
author = {Chen, Kai and Schach, Stephen R. and Yu, Liguo and Offutt, Jeff and Heller, Gillian Z.},
doi = {10.1023/B:EMSE.0000027779.70556.d0},
issn = {1382-3256},
journal = {Empirical Software Engineering},
keywords = {Change log,GCC-g++,GNUJSP,Jikes,Open-source software},
month = {sep},
number = {3},
pages = {197--210},
title = {{Open-Source Change Logs}},
url = {http://link.springer.com/10.1023/B:EMSE.0000027779.70556.d0},
volume = {9},
year = {2004}
}
@article{Weiskopf2022,
author = {Weiskopf, Sarah R. and Harm{\'{a}}{\v{c}}kov{\'{a}}, Zuzana V. and Johnson, Ciara G. and Londo{\~{n}}o-Murcia, Mar{\'{i}}a Cecilia and Miller, Brian W. and Myers, Bonnie J.E. and Pereira, Laura and Arce-Plata, Maria Isabel and Blanchard, Julia L. and Ferrier, Simon and Fulton, Elizabeth A. and Harfoot, Mike and Isbell, Forest and Johnson, Justin A. and Mori, Akira S. and Weng, Ensheng and Rosa, Isabel M.D.},
doi = {10.1016/j.envsoft.2022.105318},
issn = {13648152},
journal = {Environmental Modelling {\&} Software},
month = {mar},
pages = {105318},
title = {{Increasing the uptake of ecological model results in policy decisions to improve biodiversity outcomes}},
url = {https://linkinghub.elsevier.com/retrieve/pii/S136481522200024X},
volume = {149},
year = {2022}
}
@article{Artaza2016,
abstract = {Metrics for assessing adoption of good development practices are a useful way to ensure that software is sustainable, reusable and functional. Sustainability means that the software used today will be available - and continue to be improved and supported - in the future.},
author = {Artaza, Haydee and {Chue Hong}, Neil and Corpas, Manuel and Corpuz, Angel and Hooft, Rob W.W. and Jim{\'{e}}nez, Rafael C. and Lesko{\v{s}}ek, Brane and Olivier, Brett G. and Stourac, Jan and {Svobodov{\'{a}} Vařekov{\'{a}}}, Radka and {Van Parys}, Thomas and Vaughan, Daniel},
doi = {10.12688/f1000research.9206.1},
issn = {2046-1402},
journal = {F1000Research},
month = {aug},
pages = {2000},
title = {{Top 10 metrics for life science software good practices}},
url = {https://f1000research.com/articles/5-2000/v1},
volume = {5},
year = {2016}
}
@article{Crout2008,
author = {Crout, N. and Kokkonen, T. and Jakeman, A.J. and Norton, J.P. and Newham, L.T.H. and Anderson, R. and Assaf, H. and Croke, B.F.W. and Gaber, N. and Gibbons, J. and Holzworth, D. and Mysiak, J. and Reichl, J. and Seppelt, R. and Wagener, T. and Whitfield, P},
file = {:Users/Lemmen/Downloads/Good Modelling Practice.pdf:pdf},
journal = {U.S. Environmental Protection Agency Papers},
title = {{Good Modelling Practice}},
volume = {73},
year = {2008}
}
@techreport{Hettrick2022,
author = {Hettrick, Simon and Bast, Radovan and Botzki, Alex and Carver, Jeff and Cosden, Ian and Crouch, Steve and D'Andrea, Florencia and Dasgupta, Abhishek and Godoy, William and Gonzalez-Beltran, Alejandra and Hamster, Ulf and Henwood, Scott and Holmvall, Patric and Janosch, Stephan and Lestang, Thibault and May, Nick and Philippe, Olivier and Philips, Johan and Wyatt, Claire and Zhang, Qian},
doi = {10.5281/zenodo.6884882},
institution = {RSE Survey},
title = {{RSE Survey 2022. Pre-final release for 2022 results (Version 2022-v0.9.0)}},
url = {https://softwaresaved.github.io/international-survey-2022/},
year = {2022}
}
@article{Boyd2012,
abstract = {Ecological models have limited predictive power, but can provide insights into what makes an ecosystem vulnerable to disturbance.},
author = {Boyd, Ian L.},
doi = {10.1126/science.1225049},
issn = {0036-8075},
journal = {Science},
month = {jul},
number = {6092},
pages = {306--307},
title = {{The Art of Ecological Modeling}},
url = {https://www.science.org/doi/10.1126/science.1225049},
volume = {337},
year = {2012}
}
@article{Kernighan1976,
abstract = {Building on the work of others is the only way to make substantial progress in any field. Yet computer programming continues as a cottage industry because programmers insist on reinventing programs for each new application, instead of using what already exists. We must encourage a way of packaging programs so that they can be perceived as standard tools, each performing its specialized task sufficiently well and interfacing to other tools so conveniently that programmers seldom feel any need to make their own version from scratch.In this paper we show how programmers can view substantial parts of what they do as tool building and tool using. By studying some specific examples of general purpose tools, we show how programs can be packaged as tools, so other programmers will use them in preference to building their own. We also comment on the sort of programming environment which seems most hospitable to the development and use of tools.},
author = {Kernighan, B. W. and Plauger, P. J.},
doi = {10.1145/1010726.1010728},
file = {:Users/Lemmen/Downloads/1010726.1010728.pdf:pdf},
issn = {0163-5948},
journal = {ACM SIGSOFT Software Engineering Notes},
month = {may},
number = {1},
pages = {15--20},
pmid = {6897844},
title = {{Software tools}},
url = {https://dl.acm.org/doi/10.1145/1010726.1010728},
volume = {1},
year = {1976}
}
@book{VanWaveren1999,
abstract = {Losbladig. GMP is een project in het kader van AQUEST. - Uitg. in samenw. met WL, Delft Hydraulics ... [et al.].},
author = {{Van Waveren}, Harold{\^{}}},
isbn = {9057730561},
title = {{Vloeiend modelleren in het waterbeheer : handboek Good Modelling Practice}},
year = {1999}
}
@techreport{Bruggeman2024,
author = {Bruggeman, Jorn and Yumruktepe, Veli {\c{C}}ağlar and Lazzari, Paolo and Albernhe, Sarah and Daewel, Ute and Schnedler-Meyer, Nicolas Aza{\~{n}}a},
doi = {10.5281/zenodo.10604683},
institution = {Deliverable report of project Horizon Europe NECCTON},
title = {{Best practices for implementing new BGC process modules in CMEMS/FABM}},
url = {https://zenodo.org/records/10604683/files/Best practices for implementing new BGC process modules in CMEMS{\_}FABM D3.1.pdf?download=1},
year = {2024}
}
@article{DeNoni2014,
abstract = {In this paper, we investigate the nature of the relationships between dimensions of governance in Open Source (OS) communities. A recent review highlighted this issue as critical. Furthermore, this issue has been recognized as strategic for managing the trade-off between innovation and standardization, the capacity of firms to profit from their investment in open source, and the sustainability of OS projects. Our results are based on a comparative analysis of 40 OS projects contained in the Freshmeat dataset. For each project, we collected data on the governance solutions implemented. Governance mechanisms have been ranked for their degree of openness. Our findings show that OS governance is configurational. Those configurations are defined along two dimensions: leadership and decision-making distribution, and reciprocity of the appropriability regime. Four configurations are indeed defined: open source, sponsored, reciprocity-based, and tolerant dictatorship. Those configurations have been defined based on an exploratory factor analysis.},
author = {{De Noni}, Ivan and Ganzaroli, Andrea and Orsi, Luigi},
doi = {10.15209/jbsge.v6i1.195},
file = {:Users/Lemmen/Downloads/195-Article Text-495-2-10-20220428.pdf:pdf},
issn = {1833-4318},
journal = {Journal of Business Systems, Governance and Ethics},
keywords = {community management,design of participation architecture,open source software,oss governance},
month = {apr},
number = {1},
pages = {1--18},
title = {{The Governance of Open Source Software Communities: An Exploratory Analysis}},
url = {https://jbsge.vu.edu.au/index.php/jbsge/article/view/195},
volume = {6},
year = {2011}
}
@article{PastranaPardo2021,
author = {{Pastrana Pardo}, Manuel Alejandro and {Ordo{\~{n}}ez Erazo}, Hugo Armando and {Cobos Lozada}, Carlos Alberto},
doi = {10.21533/pen.v9i4.2239},
issn = {23034521},
journal = {Periodicals of Engineering and Natural Sciences (PEN)},
month = {nov},
number = {4},
pages = {854},
title = {{Documenting and implementing DevOps good practices with test automation and continuous deployment tools through software refinement}},
url = {http://pen.ius.edu.ba/index.php/pen/article/view/2239},
volume = {9},
year = {2021}
}
@article{Janssen2015,
abstract = {{\textcopyright} 2015, The Author(s). Here, we present a community perspective on how to explore, exploit and evolve the diversity in aquatic ecosystem models. These models play an important role in understanding the functioning of aquatic ecosystems, filling in observation gaps and developing effective strategies for water quality management. In this spirit, numerous models have been developed since the 1970s. We set off to explore model diversity by making an inventory among 42 aquatic ecosystem modellers, by categorizing the resulting set of models and by analysing them for diversity. We then focus on how to exploit model diversity by comparing and combining different aspects of existing models. Finally, we discuss how model diversity came about in the past and could evolve in the future. Throughout our study, we use analogies from biodiversity research to analyse and interpret model diversity. We recommend to make models publicly available through open-source policies, to standardize documentation and technical implementation of models, and to compare models through ensemble modelling and interdisciplinary approaches. We end with our perspective on how the field of aquatic ecosystem modelling might develop in the next 5–10 years. To strive for clarity and to improve readability for non-modellers, we include a glossary.},
annote = {From Duplicate 2 (Exploring, exploiting and evolving diversity of aquatic ecosystem models: a community perspective - Janssen, Annette B.G.; Arhonditsis, George B.; Beusen, Arthur; Bolding, Karsten; Bruce, Louise; Bruggeman, Jorn; Couture, Raoul-Marie; Downing, Andrea S.; Alex Elliott, J.; Frassl, Marieke A.; Gal, Gideon; Gerla, Daan J.; Hipsey, Matthew R.; Hu, Fenjuan; Ives, Stephen C.; Janse, Jan H.; Jeppesen, Erik; J{\"{o}}hnk, Klaus D.; Kneis, David; Kong, Xiangzhen; Kuiper, Jan J.; Lehmann, Moritz K.; Lemmen, Carsten; {\"{O}}zkundakci, Deniz; Petzoldt, Thomas; Rinke, Karsten; Robson, Barbara J.; Sachse, Ren{\'{e}}; Schep, Sebastiaan A.; Schmid, Martin; Scholten, Huub; Teurlincx, Sven; Trolle, Dennis; Troost, Tineke A.; Van Dam, Anne A.; Van Gerven, Luuk P. A.; Weijerman, Mariska; Wells, Scott A.; Mooij, Wolf M.)
And Duplicate 3 (Exploring, exploiting and evolving diversity of aquatic ecosystem models: a community perspective - Janssen, Annette B.G.; Arhonditsis, George B.; Beusen, Arthur; Bolding, Karsten; Bruce, Louise; Bruggeman, Jorn; Couture, Raoul-Marie; Downing, Andrea S.; Alex Elliott, J.; Frassl, Marieke A.; Gal, Gideon; Gerla, Daan J.; Hipsey, Matthew R.; Hu, Fenjuan; Ives, Stephen C.; Janse, Jan H.; Jeppesen, Erik; J{\"{o}}hnk, Klaus D.; Kneis, David; Kong, Xiangzhen; Kuiper, Jan J.; Lehmann, Moritz K.; Lemmen, Carsten; {\"{O}}zkundakci, Deniz; Petzoldt, Thomas; Rinke, Karsten; Robson, Barbara J.; Sachse, Ren{\'{e}}; Schep, Sebastiaan A.; Schmid, Martin; Scholten, Huub; Teurlincx, Sven; Trolle, Dennis; Troost, Tineke A.; Van Dam, Anne A.; Van Gerven, Luuk P. A.; Weijerman, Mariska; Wells, Scott A.; Mooij, Wolf M.)

NULL},
author = {Janssen, Annette B. G. and Arhonditsis, George B. and Beusen, Arthur and Bolding, Karsten and Bruce, Louise and Bruggeman, Jorn and Couture, Raoul-Marie and Downing, Andrea S. and {Alex Elliott}, J. and Frassl, Marieke A. and Gal, Gideon and Gerla, Daan J. and Hipsey, Matthew R. and Hu, Fenjuan and Ives, Stephen C. and Janse, Jan H. and Jeppesen, Erik and J{\"{o}}hnk, Klaus D. and Kneis, David and Kong, Xiangzhen and Kuiper, Jan J.J. and Lehmann, Moritz K. and Lemmen, Carsten and {\"{O}}zkundakci, Deniz and Petzoldt, Thomas and Rinke, Karsten and Robson, Barbara J. and Sachse, Ren{\'{e}} and Schep, Sebastiaan A. and Schmid, Martin and Scholten, Huub and Teurlincx, Sven and Trolle, Dennis and Troost, Tineke A. and {Van Dam}, Anne A. and {Van Gerven}, Luuk P. A. and Weijerman, Mariska and Wells, Scott A. and Mooij, Wolf M.},
doi = {10.1007/s10452-015-9544-1},
file = {:Users/Lemmen/Downloads//Janssen et al.{\_}2015{\_}Aquatic Ecology{\_}Exploring, exploiting and evolving diversity of aquatic ecosystem models a community perspective.pdf:pdf},
issn = {1386-2588},
journal = {Aquatic Ecology},
keywords = {Ecology,Geochemistry,Hydraulics,Hydrodynamics,Hydrology,Linking,Model availability,Physical environment,Socio-economics,Standardization,Water quality,a community,corresponding author,exploiting and evolving diversity,exploring,of aquatic ecosystem models},
month = {dec},
number = {4},
pages = {513--548},
title = {{Exploring, exploiting and evolving diversity of aquatic ecosystem models: a community perspective}},
url = {http://link.springer.com/10.1007/s10452-015-9544-1},
volume = {49},
year = {2015}
}
@article{AlexanderHarsShaosongOu2002,
author = {Hars, Alexander and Ou, Shaosong},
doi = {10.1080/10864415.2002.11044241},
issn = {1086-4415},
journal = {International Journal of Electronic Commerce},
month = {apr},
number = {3},
pages = {25--39},
title = {{Working for Free? Motivations for Participating in Open-Source Projects}},
url = {https://www.tandfonline.com/doi/full/10.1080/10864415.2002.11044241},
volume = {6},
year = {2002}
}
@article{Grimm2006,
abstract = {Simulation models that describe autonomous individual organisms (individual based models, IBM) or agents (agent-based models, ABM) have become a widely used tool, not only in ecology, but also in many other disciplines dealing with complex systems made up of autonomous entities. However, there is no standard protocol for describing such simulation models, which can make them difficult to understand and to duplicate. This paper presents a proposed standard protocol, ODD, for describing IBMs and ABMs, developed and tested by 28 modellers who cover a wide range of fields within ecology. This protocol consists of three blocks (Overview, Design concepts, and Details), which are subdivided into seven elements: Purpose, State variables and scales, Process overview and scheduling, Design concepts, Initialization, Input, and Submodels. We explain which aspects of a model should be described in each element, and we present an example to illustrate the protocol in use. In addition, 19 examples are available in an Online Appendix. We consider ODD as a first step for establishing a more detailed common format of the description of IBMs and ABMs. Once initiated, the protocol will hopefully evolve as it becomes used by a sufficiently large proportion of modellers.},
author = {Grimm, Volker and Berger, Uta and Bastiansen, Finn and Eliassen, Sigrunn and Ginot, Vincent and Giske, Jarl and Goss-Custard, John and Grand, Tamara and Heinz, Simone K and Huse, Geir and Huth, Andreas and Jepsen, Jane U. and J{\o}rgensen, Christian and Mooij, Wolf M. and M{\"{u}}ller, Birgit and Pe'er, Guy and Piou, Cyril and Railsback, Steven F. and Robbins, Andrew M. and Robbins, Martha M. and Rossmanith, Eva and R{\"{u}}ger, Nadja and Strand, Espen and Souissi, Sami and Stillman, Richard A. and Vab{\o}, Rune and Visser, Ute and DeAngelis, Donald L.},
doi = {10.1016/j.ecolmodel.2006.04.023},
issn = {03043800},
journal = {Ecological Modelling},
month = {sep},
number = {1-2},
pages = {115--126},
title = {{A standard protocol for describing individual-based and agent-based models}},
url = {https://linkinghub.elsevier.com/retrieve/pii/S0304380006002043},
volume = {198},
year = {2006}
}
@article{Wilson2017,
author = {Wilson, Greg and Bryan, Jennifer and Cranston, Karen and Kitzes, Justin and Nederbragt, Lex and Teal, Tracy K.},
doi = {10.1371/journal.pcbi.1005510},
editor = {Ouellette, Francis},
issn = {1553-7358},
journal = {PLOS Computational Biology},
month = {jun},
number = {6},
pages = {e1005510},
title = {{Good enough practices in scientific computing}},
url = {https://dx.plos.org/10.1371/journal.pcbi.1005510},
volume = {13},
year = {2017}
}
@article{Romano2020,
abstract = {Papers describing software are an important part of computational fields of scientific research. These “software papers” are unique in a number of ways, and they require special consideration to improve their impact on the scientific community and their efficacy at conveying important information. Here, we discuss 10 specific rules for writing software papers, covering some of the different scenarios and publication types that might be encountered, and important questions from which all computational researchers would benefit by asking along the way.},
author = {Romano, Joseph D. and Moore, Jason H.},
doi = {10.1371/journal.pcbi.1008390},
editor = {Markel, Scott},
issn = {1553-7358},
journal = {PLOS Computational Biology},
month = {nov},
number = {11},
pages = {e1008390},
title = {{Ten simple rules for writing a paper about scientific software}},
url = {https://dx.plos.org/10.1371/journal.pcbi.1008390},
volume = {16},
year = {2020}
}
@phdthesis{Suenson2015,
author = {Suenson, Espen},
file = {:Users/Lemmen/Downloads/suenson{\_}espen.pdf:pdf},
isbn = {9789521232268},
number = {197},
pages = {301},
title = {{How Computer Programmers Work}},
year = {2015}
}
@article{Crouch2013,
author = {Crouch, Stephen and Hong, Neil Chue and Hettrick, Simon and Jackson, Mike and Pawlik, Aleksandra and Sufi, Shoaib and Carr, Les and {De Roure}, David and Goble, Carole and Parsons, Mark},
doi = {10.1109/MCSE.2013.133},
issn = {1521-9615},
journal = {Computing in Science {\&} Engineering},
month = {nov},
number = {6},
pages = {74--80},
title = {{The Software Sustainability Institute: Changing Research Software Attitudes and Practices}},
url = {http://ieeexplore.ieee.org/document/6731384/},
volume = {15},
year = {2013}
}
@article{Krewinkel2017,
abstract = {The timely publication of scientific results is essential for dynamic advances in science. The ubiquitous availability of computers which are connected to a global network made the rapid and low-cost distribution of information through electronic channels possible. New concepts, such as Open Access publishing and preprint servers are currently changing the traditional print media business towards a community-driven peer production. However, the cost of scientific literature generation, which is either charged to readers, authors or sponsors, is still high. The main active participants in the authoring and evaluation of scientific manuscripts are volunteers, and the cost for online publishing infrastructure is close to negligible. A major time and cost factor is the formatting of manuscripts in the production stage. In this article we demonstrate the feasibility of writing scientific manuscripts in plain markdown (MD) text files, which can be easily converted into common publication formats, such as PDF, HTML or EPUB, using Pandoc. The simple syntax of Markdown assures the long-term readability of raw files and the development of software and workflows. We show the implementation of typical elements of scientific manuscripts—formulas, tables, code blocks and citations—and present tools for editing, collaborative writing and version control. We give an example on how to prepare a manuscript with distinct output formats, a DOCX file for submission to a journal, and a LATEX/PDF version for deposition as a PeerJ preprint. Further, we implemented new features for supporting ‘semantic web' applications, such as the ‘journal article tag suite'—JATS, and the ‘citation typing ontology'—CiTO standard. Reducing the work spent on manuscript formatting translates directly to time and cost savings for writers, publishers, readers and sponsors. Therefore, the adoption of the MD format contributes to the agile production of open science literature. Pandoc Scholar is freely available from https://github.com/pandoc-scholar .},
author = {Krewinkel, Albert and Winkler, Robert},
doi = {10.7717/peerj-cs.112},
issn = {2376-5992},
journal = {PeerJ Computer Science},
month = {may},
pages = {e112},
title = {{Formatting Open Science: agilely creating multiple document formats for academic manuscripts with Pandoc Scholar}},
url = {https://peerj.com/articles/cs-112},
volume = {3},
year = {2017}
}
@inproceedings{Sargent1994,
author = {Sargent, Robert G.},
booktitle = {Winter Simulation Conference},
editor = {Tew, J D and Manivannan, S and Sadowski, D A and Seila, A F},
pages = {77--87},
title = {{Verification and validation of simulation models}},
url = {https://repository.lib.ncsu.edu/server/api/core/bitstreams/9e7ef7f4-aab6-4732-9bb8-963774d0fe11/content},
year = {1994}
}
@article{Eick2001,
author = {Eick, S.G. and Graves, T.L. and Karr, A.F. and Marron, J.S. and Mockus, A.},
doi = {10.1109/32.895984},
issn = {00985589},
journal = {IEEE Transactions on Software Engineering},
number = {1},
pages = {1--12},
title = {{Does code decay? Assessing the evidence from change management data}},
url = {http://ieeexplore.ieee.org/document/895984/},
volume = {27},
year = {2001}
}
@book{Dalzell2009,
author = {Dalzell, Tom},
pages = {595},
title = {{The Routledge Dictionary of Modern American Slang and Unconventional English}},
year = {2009}
}
@misc{ChueHong2022,
author = {{Chue Hong}, Neil P and Katz, Daniel S. and Barker, Michelle and Lamprecht, Anna-Lena and Martinez, Carlos and Psomopoulos, Fotis E and Harrow, Jen and Castro, Leyla Jael and Gruenpeter, Morane and Martinez, Paula Andrea and Honeyman, Tom and Struck, Alexander and Lee, Allen and Loewe, Axel and van Werkhoven, Ben and Jones, Catherine and Garijo, Daniel and Plomp, Esther and Genova, Francoise and Shanahan, Hugh and Leng, Joanna and Hellstr{\"{o}}m, Maggie and Sandstr{\"{o}}m, Malin and Sinha, Manodeep and Kuzak, Mateusz and Herterich, Patricia and Zhang, Qian and Islam, Sharif and Sansone, Susanna-Assunta and Pollard, Tom and Atmojo, Udayanto Dwi and Williams, Alan and Czerniak, Andreas and Niehues, Anna and Fouilloux, Anne Claire and Desinghu, Bala and Goble, Carole and Richard, C{\'{e}}line and Gray, Charles and Erdmann, Chris and N{\"{u}}st, Daniel and Tartarini, Daniele and Ranguelova, Elena and Anzt, Hartwig and Todorov, Ilian and McNally, James and Moldon, Javier and Burnett, Jessica and Garrido-S{\'{a}}nchez, Juli{\'{a}}n and Belhajjame, Khalid and Sesink, Laurents and Hwang, Lorraine and Tovani-Palone, Marcos Roberto and Wilkinson, Mark D and Servillat, Mathieu and Liffers, Matthias and Fox, Merc and Miljkovi{\'{c}}, Nadica and Lynch, Nick and {Martinez Lavanchy}, Paula and Gesing, Sandra and Stevens, Sarah and {Martinez Cuesta}, Sergio and Peroni, Silvio and Soiland-Reyes, Stian and Bakker, Tom and Rabemanantsoa, Tovo and Sochat, Vanessa and Yehudi, Yo and WG, R D A FAIR4RS},
doi = {10.15497/RDA00068},
month = {jun},
publisher = {Zenodo},
title = {{FAIR Principles for Research Software (FAIR4RS Principles)}},
url = {https://doi.org/10.15497/RDA00068},
year = {2022}
}
@article{Barker2022,
abstract = {Research software is a fundamental and vital part of research, yet significant challenges to discoverability, productivity, quality, reproducibility, and sustainability exist. Improving the practice of scholarship is a common goal of the open science, open source, and FAIR (Findable, Accessible, Interoperable and Reusable) communities and research software is now being understood as a type of digital object to which FAIR should be applied. This emergence reflects a maturation of the research community to better understand the crucial role of FAIR research software in maximising research value. The FAIR for Research Software (FAIR4RS) Working Group has adapted the FAIR Guiding Principles to create the FAIR Principles for Research Software (FAIR4RS Principles). The contents and context of the FAIR4RS Principles are summarised here to provide the basis for discussion of their adoption. Examples of implementation by organisations are provided to share information on how to maximise the value of research outputs, and to encourage others to amplify the importance and impact of this work.},
author = {Barker, Michelle and {Chue Hong}, Neil P. and Katz, Daniel S. and Lamprecht, Anna-Lena and Martinez-Ortiz, Carlos and Psomopoulos, Fotis and Harrow, Jennifer and Castro, Leyla Jael and Gruenpeter, Morane and Martinez, Paula Andrea and Honeyman, Tom},
doi = {10.1038/s41597-022-01710-x},
issn = {2052-4463},
journal = {Scientific Data},
month = {oct},
number = {1},
pages = {622},
title = {{Introducing the FAIR Principles for research software}},
url = {https://www.nature.com/articles/s41597-022-01710-x},
volume = {9},
year = {2022}
}
@article{Grimm2010,
abstract = {The 'ODD' (Overview, Design concepts, and Details) protocol was published in 2006 to standardize the published descriptions of individual-based and agent-based models (ABMs). The primary objectives of ODD are to make model descriptions more understandable and complete, thereby making ABMs less subject to criticism for being irreproducible. We have systematically evaluated existing uses of the ODD protocol and identified, as expected, parts of ODD needing improvement and clarification. Accordingly, we revise the definition of ODD to clarify aspects of the original version and thereby facilitate future standardization of ABM descriptions. We discuss frequently raised critiques in ODD but also two emerging, and unanticipated, benefits: ODD improves the rigorous formulation of models and helps make the theoretical foundations of large models more visible. Although the protocol was designed for ABMs, it can help with documenting any large, complex model, alleviating some general objections against such models. {\textcopyright} 2010 Elsevier B.V.},
author = {Grimm, Volker and Berger, Uta and DeAngelis, Donald L. and Polhill, J. Gary and Giske, Jarl and Railsback, Steven F.},
doi = {10.1016/j.ecolmodel.2010.08.019},
issn = {03043800},
journal = {Ecological Modelling},
keywords = {Model description,Model formulation,Model replication,Scientific communication,Standardization},
month = {nov},
number = {23},
pages = {2760--2768},
title = {{The ODD protocol: A review and first update}},
url = {https://linkinghub.elsevier.com/retrieve/pii/S030438001000414X},
volume = {221},
year = {2010}
}
@article{Wilson2014,
author = {Wilson, Greg and Aruliah, D. A. and Brown, C. Titus and {Chue Hong}, Neil P. and Davis, Matt and Guy, Richard T. and Haddock, Steven H. D. and Huff, Kathryn D. and Mitchell, Ian M. and Plumbley, Mark D. and Waugh, Ben and White, Ethan P. and Wilson, Paul},
doi = {10.1371/journal.pbio.1001745},
editor = {Eisen, Jonathan A.},
issn = {1545-7885},
journal = {PLoS Biology},
month = {jan},
number = {1},
pages = {e1001745},
title = {{Best Practices for Scientific Computing}},
url = {https://dx.plos.org/10.1371/journal.pbio.1001745},
volume = {12},
year = {2014}
}
@article{Rosero2016,
abstract = {Software regression testing techniques verify previous functionalities each time software modifications occur or new characteristics are added. With the aim of gaining a better understanding of this subject, in this work we present a survey of software regression testing techniques applied in the last 15 years; taking into account its application domain, kind of metrics they use, its application strategies and the phase of the software development process where they are applied. From an outcome of 460 papers, a set of 25 papers describing the use of 31 software testing regression techniques were identified. Results of this survey suggest that at the time of applying a regression testing techniques, metrics like cost and fault detection efficiency are the most relevant. Most of the techniques were assessed with instrumented programs (experimental cases) under academic settings. Conversely, we observe a minimum set of software regression techniques applied in industrial settings, mainly, under corrective and maintenance approaches. Finally, we observe a trend using some regression techniques under agile approaches.},
author = {Rosero, Ra{\'{u}}l H. and G{\'{o}}mez, Omar S. and Rodr{\'{i}}guez, Glen},
doi = {10.1142/S0218194016300013},
issn = {0218-1940},
journal = {International Journal of Software Engineering and Knowledge Engineering},
month = {jun},
number = {05},
pages = {675--689},
title = {{15 Years of Software Regression Testing Techniques — A Survey}},
url = {https://www.worldscientific.com/doi/abs/10.1142/S0218194016300013},
volume = {26},
year = {2016}
}
@book{Raymond2003,
abstract = {The Art of UNIX Programming poses the belief that understanding the unwritten UNIX engineering tradition and mastering its design patterns will help programmers of all stripes to become better programmers. This book attempts to capture the engineering wisdom and design philosophy of the UNIX, Linux, and Open Source software development community as it has evolved over the past three decades, and as it is applied today by the most experienced programmers. Eric Raymond offers the next generation of "hackers" the unique opportunity to learn the connection between UNIX philosophy and practice through careful case studies of the very best UNIX/Linux programs.},
author = {Raymond, E.S.},
isbn = {0131429019},
pages = {560},
title = {{The art of unix programming}},
url = {http://portal.acm.org/citation.cfm?id=829549},
year = {2003}
}
@incollection{Tang2020,
author = {Tang, Wenwu and Grimm, Volker and Tesfatsion, Leigh and Shook, Eric and Bennett, David and An, Li and Gong, Zhaoya and Ye, Xinyue},
doi = {10.1007/978-3-030-47998-5_7},
pages = {115--134},
title = {{Code Reusability and Transparency of Agent-Based Modeling: A Review from a Cyberinfrastructure Perspective}},
url = {http://link.springer.com/10.1007/978-3-030-47998-5{\_}7},
year = {2020}
}
